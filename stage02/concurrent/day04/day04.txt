前情回顾

1.进程间通信
    * 管道通信 Pipe() p.send() p.recv()
    * 消息队列 Queue() q.put() q.get()
    * 共享内存  Value() Array()
    * 信号量 Semaphore() acquire() release()

2.threading 创建线程
    Thread() 创建线程对象
    start() 启动线程
    join() 回收线程

3.线程属性 name is_alive() daemon

4.自定义线程类：继承Thread 重写__init__()和run()方法

5.线程的同步互斥
    同步互斥方法：Event() wait() set() clear()
                Lock() acquire() release()
    死锁：由于上锁造成的程序阻塞

======================================================

效率测试：
Single CPU:4.6s
Single IO:6.3s

Multi_process CPU:1.7s
Multi_process IO:2.1s

Multi_thread CPU:4.5s
Multi_thread IO:6.8s

====================================================

练习：根据fork多进程并发网络模型思路，完成基于process的多进程并发网络模型

====================================================

ftp文件服务器

1.技术点确定
    * 并发模型：多线程并发
    * 数据传输：TCP传输

2.结构设计
    * 将基本文件操作功能封装为类

3.功能模块
    * 搭建网络通信模型
    * 查看文件列表
    * 下载文件
    * 上传文件
    * 客户端退出

4.协议确定
    L                       请求文件列表
    Q                       退出
    G                       下载文件
    P                       上传文件
    ftp_transport_over      传输结束

=========================================================

作业：
1.梳理ftp思路，完成文件的上传功能
2.对重点代码，要求自己会写
3.对进程线程总结，对“要求”问题自己总结回答
